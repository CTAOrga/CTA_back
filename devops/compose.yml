services:
  backend:
    build:
      context: ../
      dockerfile: devops/Dockerfile
    container_name: cta_backend
    ports:
      - "8000:8000"
    env_file:
      - ./.env.compose
    networks:
      - cta_back_network
    depends_on:
      - mysql
    restart: unless-stopped # ← si falla al arrancar, reintenta
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    image: cta_front_dev:latest
    container_name: cta_frontend
    ports:
      - "80:80"      # Puerto 80 para producción
    networks:
      - cta_back_network
    depends_on:
      - backend
    restart: unless-stopped

  mysql:
    image: mysql:8.0.19
    container_name: mysql-container
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root # Contraseña para el usuario root
      MYSQL_DATABASE: appdb # Nombre de la base de datos a crear
      MYSQL_USER: appuser # Nombre del usuario a crear
      MYSQL_PASSWORD: "AppPass!123" # Contraseña para el usuario
    networks:
      - cta_back_network
    ports:
      - "3307:3306" # antes "3306:3306 --para no romper el build de Docker si ya estas corriendo mySql local en 3306"
    volumes:
      - mysql-data:/var/lib/mysql
        # ⬇️ NUEVO: healthcheck para que Compose sepa cuándo MySQL está listo
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -proot --silent"]
      interval: 5s
      retries: 30
      start_period: 20s
      timeout: 3s

volumes:
  mysql-data:

networks:
  cta_back_network:
